The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.

The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.

The response will be a JSON object with an endpoint key. This will be set to an object containing the standard CDN endpoint attributes.

Unauthorized

The resource was not found.

API Rate limit exceeded

Server error.

Unexpected error



To delete a specific CDN endpoint, send a DELETE request to /v2/cdn/endpoints/$ENDPOINT_ID.

A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.

A unique identifier for a CDN endpoint.

The action was successful and the response body is empty.

Unauthorized

The resource was not found.

API Rate limit exceeded

Server error.

Unexpected error



To purge cached content from a CDN endpoint, send a DELETE request to /v2/cdn/endpoints/$ENDPOINT_ID/cache. The body of the request should include a files attribute containing a list of cached file paths to be purged. A path may be for a single file or may contain a wildcard (*) to recursively purge all files under a directory. When only a wildcard is provided, all cached files will be purged. There is a rate limit of 50 files per 20 seconds that can be purged.

A unique identifier for a CDN endpoint.

An array of strings containing the path to the content to be purged from the CDN cache.

The action was successful and the response body is empty.

Unauthorized

The resource was not found.

API Rate limit exceeded

Server error.

Unexpected error



In order to perform SSL termination on load balancers, DigitalOcean offers two types of SSL certificate management:

Custom: User-generated certificates may be uploaded to DigitalOcean where they will be placed in a fully encrypted and isolated storage system.

Let's Encrypt: Certificates may be automatically generated by DigitalOcean utilizing an integration with Let's Encrypt, the free and open certificate authority. These certificates will also be automatically renewed as required.

To list all of the certificates available on your account, send a GET request to /v2/certificates.

Number of items returned per page

Which 'page' of paginated results to return.

The result will be a JSON object with a certificates key. This will be set to an array of certificate objects, each of which will contain the standard certificate attributes.

Unauthorized

API Rate limit exceeded

Server error.

Unexpected error



To upload new SSL certificate which you have previously generated, send a POST request to /v2/certificates.

When uploading a user-generated certificate, the private_key, leaf_certificate, and optionally the certificate_chain attributes should be provided. The type must be set to custom.

When using Let's Encrypt to create a certificate, the dns_names attribute must be provided, and the type must be set to lets_encrypt.

A unique human-readable name referring to a certificate.

A string representing the type of the certificate. The value will be custom for a user-uploaded certificate or lets_encrypt for one automatically generated with Let's Encrypt.

An array of fully qualified domain names (FQDNs) for which the certificate was issued. A certificate covering all subdomains can be issued using a wildcard (e.g. *.example.com).

The response will be a JSON object with a key called certificate. The value of this will be an object that contains the standard attributes associated with a certificate. When using Let's Encrypt, the initial value of the certificate's state attribute will be pending. When the certificate has been successfully issued by Let's Encrypt, this will transition to verified and be ready for use.

Unauthorized

API Rate limit exceeded

Server error.

Unexpected error



To show information about an existing certificate, send a GET request to /v2/certificates/$CERTIFICATE_ID.

A unique identifier for a certificate.